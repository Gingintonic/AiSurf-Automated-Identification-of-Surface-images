# Rutile TiO2 (110) with better symmetry prediction
[Input]
inputfile = rutile.1x1.AFM.png

[SIFT]
;sift parameters are well explained in:
; https://docs.opencv.org/3.4.9/d5/d3c/classcv_1_1xfeatures2d_1_1sift.html
cThr = 0.003
sigma = 4
nOctLayers = 2

[Keypoint filtering]
;these are thresholds to filter out keypoints that could get in the way of the method
;both are in units of the median keypoint size
;all keypoints that are bigger than median*size_threshold are deleted
;all keypoints that are closer than median*edge_threshold to one border of the image are deleted
size_threshold = 2.0
edge_threshold = 1.0


[Keypoint Clustering]
;clusterings with n clusters between lower and upper bound are evaluated wrt their silhouette score
;the one with the maximal silhouette score is chosen for further processing
#nclusters_lower_bound = 2
#nclusters_upper_bound = 15
cluster_kp_low = 2
cluster_kp_high = 15
cluster_choice = 1

[Nearest Neighbours]
;number_of_nn should be self explanatory (nn stands for nearest neighbours
;usually to get a good clustering of the nn distribution lower bound should be set to k1
;and upper bound to k1*4
;clustersize_threshold is used to reduce impact of erroneous nn-vectors on the selection of the lattice vectors
;in the final distribution only nn-clusters with members n>=clustersize_threshold*n_max are considered
;usually clustersize_threshold is set to 0.3
#number_of_nn = 6
#nclusters_lower_bound = 6
#nclusters_upper_bound = 24
clustersize_threshold = 0.3
cluster_kNN_low = 6
cluster_kNN_high = 24

[Sublattice lookup]
;clustering parameters for the sublattice distribution
#nclusters_lower_bound = 2
#nclusters_upper_bound = 20
cluster_SUBL_low = 2
cluster_SUBL_high = 6

[Deviation plot]
;for the final deviation plot nearest neighbours are calculated wrt to all keypoints
;not just for the (presumably regular) keypoint cluster with most number of keypoints
;therefore it is usually better to chose k2 bigger than k1
;all vectors that are within the relative_r-tolerance of the lattice vectors are drawn
;the arrow_width can also be specified here (see matplotlib.quiver() - width parameter)
;it is in units of the plot width (usual value 0.005)
#number_of_nn = 20
#relative_r-tolerance = 3.5
arrow_width = 0.003
k2 = 8
rtol_rel = 5
c_max_arrow = 3.5

[Symmetry check]
sym_yesno = 1.1

